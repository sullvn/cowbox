name: Test
on:
  pull_request:
    types:
      - opened
      - synchronize
  push:
    branches: main
jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Cache Rust
        id: cache-rust
        uses: Swatinem/rust-cache@v2

      - name: Install vcpkg dependencies
        if: |
          (runner.os == 'Windows') &&
          (steps.cache-rust.outputs.cache-hit != 'true')
        # if: runner.os == 'Windows'
        run: |
          cd detours_sys
          cargo install cargo-vcpkg
          cargo vcpkg build --target i686-pc-windows-msvc
          cargo vcpkg build --target x86_64-pc-windows-msvc

      - name: ls ~/.cargo
        if: runner.os == 'Windows'
        run: ls ~/.cargo/

      - name: echo $CARGO_HOME
        if: runner.os == 'Windows'
        shell: bash
        run: echo $CARGO_HOME

      - name: ls $CARGO_HOME
        if: runner.os == 'Windows'
        shell: bash
        run: ls $CARGO_HOME/registry/

      - name: List target
        if: runner.os == 'Windows'
        run: ls target

      - name: List vcpkg
        if: runner.os == 'Windows'
        run: ls target/vcpkg

      - name: Pre-build Windows injection DLLs
        if: runner.os == 'Windows'
        run: |
          cargo build `
            --package cowbox_injection `
            --release `
            --target i686-pc-windows-msvc `
            --target x86_64-pc-windows-msvc

          cp `
            target\i686-pc-windows-msvc\release\cowbox_injection.dll `
            target\release\cowbox_injection32.dll
          cp `
            target\x86_64-pc-windows-msvc\release\cowbox_injection.dll `
            target\release\cowbox_injection64.dll

      - name: Build
        run: cargo build --release

      - name: Typecheck and Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Run tests
        run: cargo test

      - name: Run tests (Windows x86)
        if: runner.os == 'Windows'
        run: cargo test --target i686-pc-windows-msvc
